name: "davidbornitz.dev Change Pipeline"
 
on:
 push:
   branches:
   - main
   - feature/terragrunt
 pull_request:
   branches:
   - main
   - feature/terragrunt
 
env:
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
 GITHUB_TOKEN: ${{ secrets.TOKEN }}
 tg_version: '0.55.0'
 tf_version: '1.6.6'

 
jobs:
  davidbornitz-build:
    name: "Build davidbornitz.dev"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: BuildInvitation
      working-directory: invitationApp
      run: |
        npm install
        yarn build:frontend

    - name: Check terragrunt HCL
      id: fmt
      uses: gruntwork-io/terragrunt-action@v2
      with:
        tf_version: ${{ env.tf_version }}
        tg_version: ${{ env.tg_version }}
        tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

    - name: Plan
      id: plan
      if: github.event_name == 'pull_request'
      uses: gruntwork-io/terragrunt-action@v2
      with:
        tf_version: ${{ env.tf_version }}
        tg_version: ${{ env.tg_version }}
        tg_command: 'plan'
        tg_comment: true
  
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Deploy
      uses: gruntwork-io/terragrunt-action@v2
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      with:
        tf_version: ${{ env.tf_version }}
        tg_version: ${{ env.tg_version }}
        tg_dir: ${{ env.working_dir }}
        tg_command: 'apply'
        tg_comment: true